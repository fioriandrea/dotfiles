#!/usr/bin/env bash

print_help() {
    cat << EOF
install-dotfiles [options]

Install dotfiles found in a git repo.

-h    Show this help
-r    Specify the repo. Default is $repo
-d    Specify the destination folder. Default is $destination
-b    Specify a backup directory. By default, a temporary directory will be created
EOF
}

print_summary() {
    local outfd
    [[ $1 -eq 0 ]] && outfd=1 || outfd=2
    {
        printf '\nInstallation of %s dotfiles ' "$repo"
        if [[ $1 -eq 0 ]]; then
            printf 'completed succesfully'
        else
            printf 'failed'
        fi
        printf '\n'
        cat <<EOF

Summary:

Backup directory: $backup
Destination directory: $destination
EOF
    } >&"$outfd"
}

clean_exit() {
    print_summary "$?"
    rm -rf "$tmpdir" 2>/dev/null
}

die() {
    printf '%s: %s\n' "$0" "$1" >&2
    exit 1
}

cmdexists() {
    command -v "$1" >/dev/null 2>&1
}

repo=https://github.com/fioriandrea/dotfiles
destination=$HOME
backup=

while getopts ':hr:d:c:b:' o; do
    case $o in
        h) print_help ; exit 0 ;;
        r) repo=$OPTARG ;;
        d) destination=$OPTARG ;;
        b) backup=$OPTARG ;;
        :) die "must supply argument to '$OPTARG'" ;;
        ?) die "unknown option '$OPTARG'" ;;
    esac
done

shift "$((OPTIND - 1))"

cmdexists rsync || die 'missing dependency rsync'
cmdexists git || die 'missing dependency git'

[[ -d $destination ]] || die "$destination is not a directory"

if [[ -z $backup ]]; then
    backup=$(mktemp -d)
else
    mkdir -p "$backup"
fi
[[ -d $backup ]] || die 'failed to create backup directory'

tmpdir=$(mktemp -d)
[[ -d $tmpdir ]] || die 'failed to create tmpdir'

trap 'clean_exit' EXIT

shopt -s extglob
backup=${backup%%+(/)}
tmpdir=${tmpdir%%+(/)}
destination=${destination%%+(/)}

confdirpath=$destination/.git
[[ -d $confdirpath ]] && {
    cp -r "$confdirpath" "$backup/.git" || exit 1
    rm -rf "$confdirpath" || exit 1
}

pushd "$tmpdir" || exit 1
git clone "$repo" . || exit 1
git config --local status.showUntrackedFiles no || exit 1
popd || exit 1

rsync --archive --progress --backup-dir "$backup" "$tmpdir"/ "$destination" || exit 1
